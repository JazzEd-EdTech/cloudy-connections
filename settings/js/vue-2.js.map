{"version":3,"file":"vue-2.js","sources":["webpack:///./settings/src/components/userList.vue?83cb","webpack:///./settings/src/components/userList/userRow.vue?0888","webpack:///./settings/src/views/Users.vue?e3b9","webpack:///./settings/src/components/userList.vue?881a","webpack:///./settings/src/components/userList/userRow.vue?6f43","webpack:///./settings/src/views/Users.vue?cf6a","webpack:///./settings/src/components/userList.vue","webpack:///./settings/src/components/userList.vue?3703","webpack:///./settings/src/components/userList.vue?6a78","webpack:///./settings/src/components/userList/userRow.vue","webpack:///./settings/src/components/userList/userRow.vue?c225","webpack:///./settings/src/components/userList/userRow.vue?4bfd","webpack:///./settings/src/views/Users.vue","webpack:///./settings/src/views/Users.vue?9466","webpack:///./settings/src/views/Users.vue?356f"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport userRow from './userList/userRow';\nimport { Multiselect } from 'nextcloud-vue';\nimport InfiniteLoading from 'vue-infinite-loading';\nimport Vue from 'vue';\nexport default {\n  name: 'userList',\n  props: ['users', 'showConfig', 'selectedGroup', 'externalActions'],\n  components: {\n    userRow: userRow,\n    Multiselect: Multiselect,\n    InfiniteLoading: InfiniteLoading\n  },\n  data: function data() {\n    var unlimitedQuota = {\n      id: 'none',\n      label: t('settings', 'Unlimited')\n    },\n        defaultQuota = {\n      id: 'default',\n      label: t('settings', 'Default quota')\n    };\n    return {\n      unlimitedQuota: unlimitedQuota,\n      defaultQuota: defaultQuota,\n      loading: {\n        all: false,\n        groups: false\n      },\n      scrolled: false,\n      searchQuery: '',\n      newUser: {\n        id: '',\n        displayName: '',\n        password: '',\n        mailAddress: '',\n        groups: [],\n        subAdminsGroups: [],\n        quota: defaultQuota,\n        language: {\n          code: 'en',\n          name: t('settings', 'Default language')\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (!this.settings.canChangePassword) {\n      OC.Notification.showTemporary(t('settings', 'Password change is disabled because the master key is disabled'));\n    }\n    /** \n     * Init default language from server data. The use of this.settings\n     * requires a computed variable, which break the v-model binding of the form,\n     * this is a much easier solution than getter and setter on a computed var\n     */\n\n\n    Vue.set(this.newUser.language, 'code', this.settings.defaultLanguage);\n    /**\n     * In case the user directly loaded the user list within a group\n     * the watch won't be triggered. We need to initialize it.\n     */\n\n    this.setNewUserDefaultGroup(this.selectedGroup);\n    /** \n     * Register search\n     */\n\n    this.userSearch = new OCA.Search(this.search, this.resetSearch);\n  },\n  computed: {\n    settings: function settings() {\n      return this.$store.getters.getServerData;\n    },\n    filteredUsers: function filteredUsers() {\n      if (this.selectedGroup === 'disabled') {\n        var disabledUsers = this.users.filter(function (user) {\n          return user.enabled === false;\n        });\n\n        if (disabledUsers.length === 0 && this.$refs.infiniteLoading && this.$refs.infiniteLoading.isComplete) {\n          // disabled group is empty, redirection to all users\n          this.$router.push({\n            name: 'users'\n          });\n          this.$refs.infiniteLoading.stateChanger.reset();\n        }\n\n        return disabledUsers;\n      }\n\n      if (!this.settings.isAdmin) {\n        // we don't want subadmins to edit themselves\n        return this.users.filter(function (user) {\n          return user.enabled !== false && user.id !== oc_current_user;\n        });\n      }\n\n      return this.users.filter(function (user) {\n        return user.enabled !== false;\n      });\n    },\n    groups: function groups() {\n      // data provided php side + remove the disabled group\n      return this.$store.getters.getGroups.filter(function (group) {\n        return group.id !== 'disabled';\n      }).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    },\n    canAddGroups: function canAddGroups() {\n      // disabled if no permission to add new users to group\n      return this.groups.map(function (group) {\n        // clone object because we don't want\n        // to edit the original groups\n        group = Object.assign({}, group);\n        group.$isDisabled = group.canAdd === false;\n        return group;\n      });\n    },\n    subAdminsGroups: function subAdminsGroups() {\n      // data provided php side\n      return this.$store.getters.getSubadminGroups;\n    },\n    quotaOptions: function quotaOptions() {\n      // convert the preset array into objects\n      var quotaPreset = this.settings.quotaPreset.reduce(function (acc, cur) {\n        return acc.concat({\n          id: cur,\n          label: cur\n        });\n      }, []); // add default presets\n\n      quotaPreset.unshift(this.unlimitedQuota);\n      quotaPreset.unshift(this.defaultQuota);\n      return quotaPreset;\n    },\n    minPasswordLength: function minPasswordLength() {\n      return this.$store.getters.getPasswordPolicyMinLength;\n    },\n    usersOffset: function usersOffset() {\n      return this.$store.getters.getUsersOffset;\n    },\n    usersLimit: function usersLimit() {\n      return this.$store.getters.getUsersLimit;\n    },\n    usersCount: function usersCount() {\n      return this.users.length;\n    },\n\n    /* LANGUAGES */\n    languages: function languages() {\n      return Array({\n        label: t('settings', 'Common languages'),\n        languages: this.settings.languages.commonlanguages\n      }, {\n        label: t('settings', 'All languages'),\n        languages: this.settings.languages.languages\n      });\n    }\n  },\n  watch: {\n    // watch url change and group select\n    selectedGroup: function selectedGroup(val, old) {\n      this.$store.commit('resetUsers');\n      this.$refs.infiniteLoading.stateChanger.reset();\n      this.setNewUserDefaultGroup(val);\n    },\n    // make sure the infiniteLoading state is changed if we manually\n    // add/remove data from the store\n    usersCount: function usersCount(val, old) {\n      // deleting the last user, reset the list \n      if (val === 0 && old === 1) {\n        this.$refs.infiniteLoading.stateChanger.reset(); // adding the first user, warn the infiniteLoader that \n        // the list is not empty anymore (we don't fetch the newly\n        // added user as we already have all the info we need)\n      } else if (val === 1 && old === 0) {\n        this.$refs.infiniteLoading.stateChanger.loaded();\n      }\n    }\n  },\n  methods: {\n    onScroll: function onScroll(event) {\n      this.scrolled = event.target.scrollTo > 0;\n    },\n\n    /**\n     * Validate quota string to make sure it's a valid human file size\n     * \n     * @param {string} quota Quota in readable format '5 GB'\n     * @returns {Object}\n     */\n    validateQuota: function validateQuota(quota) {\n      // only used for new presets sent through @Tag\n      var validQuota = OC.Util.computerFileSize(quota);\n\n      if (validQuota !== null && validQuota >= 0) {\n        // unify format output\n        quota = OC.Util.humanFileSize(OC.Util.computerFileSize(quota));\n        return this.newUser.quota = {\n          id: quota,\n          label: quota\n        };\n      } // Default is unlimited\n\n\n      return this.newUser.quota = this.quotaOptions[0];\n    },\n    infiniteHandler: function infiniteHandler($state) {\n      this.$store.dispatch('getUsers', {\n        offset: this.usersOffset,\n        limit: this.usersLimit,\n        group: this.selectedGroup !== 'disabled' ? this.selectedGroup : '',\n        search: this.searchQuery\n      }).then(function (response) {\n        response ? $state.loaded() : $state.complete();\n      });\n    },\n\n    /* SEARCH */\n    search: function search(query) {\n      this.searchQuery = query;\n      this.$store.commit('resetUsers');\n      this.$refs.infiniteLoading.stateChanger.reset();\n    },\n    resetSearch: function resetSearch() {\n      this.search('');\n    },\n    resetForm: function resetForm() {\n      // revert form to original state\n      Object.assign(this.newUser, this.$options.data.call(this).newUser); // reset group\n\n      this.setNewUserDefaultGroup(this.selectedGroup);\n      this.loading.all = false;\n    },\n    createUser: function createUser() {\n      var _this = this;\n\n      this.loading.all = true;\n      this.$store.dispatch('addUser', {\n        userid: this.newUser.id,\n        password: this.newUser.password,\n        displayName: this.newUser.displayName,\n        email: this.newUser.mailAddress,\n        groups: this.newUser.groups.map(function (group) {\n          return group.id;\n        }),\n        subadmin: this.newUser.subAdminsGroups.map(function (group) {\n          return group.id;\n        }),\n        quota: this.newUser.quota.id,\n        language: this.newUser.language.code\n      }).then(function () {\n        _this.resetForm();\n      }).catch(function (error) {\n        _this.loading.all = false;\n\n        if (error.response && error.response.data && error.response.data.ocs && error.response.data.ocs.meta) {\n          var statuscode = error.response.data.ocs.meta.statuscode;\n\n          if (statuscode === 102) {\n            // wrong username\n            _this.$refs.newusername.focus();\n          } else if (statuscode === 107) {\n            // wrong password\n            _this.$refs.newuserpassword.focus();\n          }\n        }\n      });\n    },\n    setNewUserDefaultGroup: function setNewUserDefaultGroup(value) {\n      if (value && value.length > 0) {\n        // setting new user default group to the current selected one\n        var currentGroup = this.groups.find(function (group) {\n          return group.id === value;\n        });\n\n        if (currentGroup) {\n          this.newUser.groups = [currentGroup];\n          return;\n        }\n      } // fallback, empty selected group\n\n\n      this.newUser.groups = [];\n    },\n\n    /**\n     * Create a new group\n     * \n     * @param {string} groups Group id\n     * @returns {Promise}\n     */\n    createGroup: function createGroup(gid) {\n      var _this2 = this;\n\n      this.loading.groups = true;\n      this.$store.dispatch('addGroup', gid).then(function (group) {\n        _this2.newUser.groups.push(_this2.groups.find(function (group) {\n          return group.id === gid;\n        }));\n\n        _this2.loading.groups = false;\n      }).catch(function () {\n        _this2.loading.groups = false;\n      });\n      return this.$store.getters.getGroups[this.groups.length];\n    }\n  }\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ClickOutside from 'vue-click-outside';\nimport Vue from 'vue';\nimport VTooltip from 'v-tooltip';\nimport { PopoverMenu, Multiselect } from 'nextcloud-vue';\nVue.use(VTooltip);\nexport default {\n  name: 'userRow',\n  props: ['user', 'settings', 'groups', 'subAdminsGroups', 'quotaOptions', 'showConfig', 'languages', 'externalActions'],\n  components: {\n    PopoverMenu: PopoverMenu,\n    Multiselect: Multiselect\n  },\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  mounted: function mounted() {// required if popup needs to stay opened after menu click\n    // since we only have disable/delete actions, let's close it directly\n    // this.popupItem = this.$el;\n  },\n  data: function data() {\n    return {\n      rand: parseInt(Math.random() * 1000),\n      openedMenu: false,\n      feedbackMessage: '',\n      loading: {\n        all: false,\n        displayName: false,\n        password: false,\n        mailAddress: false,\n        groups: false,\n        subadmins: false,\n        quota: false,\n        delete: false,\n        disable: false,\n        languages: false\n      }\n    };\n  },\n  computed: {\n    /* USER POPOVERMENU ACTIONS */\n    userActions: function userActions() {\n      var actions = [{\n        icon: 'icon-delete',\n        text: t('settings', 'Delete user'),\n        action: this.deleteUser\n      }, {\n        icon: this.user.enabled ? 'icon-close' : 'icon-add',\n        text: this.user.enabled ? t('settings', 'Disable user') : t('settings', 'Enable user'),\n        action: this.enableDisableUser\n      }];\n\n      if (this.user.email !== null && this.user.email !== '') {\n        actions.push({\n          icon: 'icon-mail',\n          text: t('settings', 'Resend welcome email'),\n          action: this.sendWelcomeMail\n        });\n      }\n\n      return actions.concat(this.externalActions);\n    },\n\n    /* GROUPS MANAGEMENT */\n    userGroups: function userGroups() {\n      var _this = this;\n\n      var userGroups = this.groups.filter(function (group) {\n        return _this.user.groups.includes(group.id);\n      });\n      return userGroups;\n    },\n    userSubAdminsGroups: function userSubAdminsGroups() {\n      var _this2 = this;\n\n      var userSubAdminsGroups = this.subAdminsGroups.filter(function (group) {\n        return _this2.user.subadmin.includes(group.id);\n      });\n      return userSubAdminsGroups;\n    },\n    availableGroups: function availableGroups() {\n      var _this3 = this;\n\n      return this.groups.map(function (group) {\n        // clone object because we don't want\n        // to edit the original groups\n        var groupClone = Object.assign({}, group); // two settings here:\n        // 1. user NOT in group but no permission to add\n        // 2. user is in group but no permission to remove\n\n        groupClone.$isDisabled = group.canAdd === false && !_this3.user.groups.includes(group.id) || group.canRemove === false && _this3.user.groups.includes(group.id);\n        return groupClone;\n      });\n    },\n\n    /* QUOTA MANAGEMENT */\n    usedSpace: function usedSpace() {\n      if (this.user.quota.used) {\n        return t('settings', '{size} used', {\n          size: OC.Util.humanFileSize(this.user.quota.used)\n        });\n      }\n\n      return t('settings', '{size} used', {\n        size: OC.Util.humanFileSize(0)\n      });\n    },\n    usedQuota: function usedQuota() {\n      var quota = this.user.quota.quota;\n\n      if (quota > 0) {\n        quota = Math.min(100, Math.round(this.user.quota.used / quota * 100));\n      } else {\n        var usedInGB = this.user.quota.used / (10 * Math.pow(2, 30)); //asymptotic curve approaching 50% at 10GB to visualize used stace with infinite quota\n\n        quota = 95 * (1 - 1 / (usedInGB + 1));\n      }\n\n      return isNaN(quota) ? 0 : quota;\n    },\n    // Mapping saved values to objects\n    userQuota: function userQuota() {\n      if (this.user.quota.quota >= 0) {\n        // if value is valid, let's map the quotaOptions or return custom quota\n        var humanQuota = OC.Util.humanFileSize(this.user.quota.quota);\n        var userQuota = this.quotaOptions.find(function (quota) {\n          return quota.id === humanQuota;\n        });\n        return userQuota ? userQuota : {\n          id: humanQuota,\n          label: humanQuota\n        };\n      } else if (this.user.quota.quota === 'default') {\n        // default quota is replaced by the proper value on load\n        return this.quotaOptions[0];\n      }\n\n      return this.quotaOptions[1]; // unlimited\n    },\n\n    /* PASSWORD POLICY? */\n    minPasswordLength: function minPasswordLength() {\n      return this.$store.getters.getPasswordPolicyMinLength;\n    },\n\n    /* LANGUAGE */\n    userLanguage: function userLanguage() {\n      var _this4 = this;\n\n      var availableLanguages = this.languages[0].languages.concat(this.languages[1].languages);\n      var userLang = availableLanguages.find(function (lang) {\n        return lang.code === _this4.user.language;\n      });\n\n      if (_typeof(userLang) !== 'object' && this.user.language !== '') {\n        return {\n          code: this.user.language,\n          name: this.user.language\n        };\n      } else if (this.user.language === '') {\n        return false;\n      }\n\n      return userLang;\n    }\n  },\n  methods: {\n    /* MENU HANDLING */\n    toggleMenu: function toggleMenu() {\n      this.openedMenu = !this.openedMenu;\n    },\n    hideMenu: function hideMenu() {\n      this.openedMenu = false;\n    },\n\n    /**\n     * Generate avatar url\n     * \n     * @param {string} user The user name\n     * @param {int} size Size integer, default 32\n     * @returns {string}\n     */\n    generateAvatar: function generateAvatar(user) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n      return OC.generateUrl('/avatar/{user}/{size}?v={version}', {\n        user: user,\n        size: size,\n        version: oc_userconfig.avatar.version\n      });\n    },\n\n    /**\n     * Format array of groups objects to a string for the popup\n     * \n     * @param {array} groups The groups\n     * @returns {string}\n     */\n    formatGroupsTitle: function formatGroupsTitle(groups) {\n      var names = groups.map(function (group) {\n        return group.name;\n      });\n      return names.slice(2).join(', ');\n    },\n    deleteUser: function deleteUser() {\n      var _this5 = this;\n\n      this.loading.delete = true;\n      this.loading.all = true;\n      var userid = this.user.id;\n      return this.$store.dispatch('deleteUser', userid).then(function () {\n        _this5.loading.delete = false;\n        _this5.loading.all = false;\n      });\n    },\n    enableDisableUser: function enableDisableUser() {\n      var _this6 = this;\n\n      this.loading.delete = true;\n      this.loading.all = true;\n      var userid = this.user.id;\n      var enabled = !this.user.enabled;\n      return this.$store.dispatch('enableDisableUser', {\n        userid: userid,\n        enabled: enabled\n      }).then(function () {\n        _this6.loading.delete = false;\n        _this6.loading.all = false;\n      });\n    },\n\n    /**\n     * Set user displayName\n     * \n     * @param {string} displayName The display name\n     * @returns {Promise}\n     */\n    updateDisplayName: function updateDisplayName() {\n      var _this7 = this;\n\n      var displayName = this.$refs.displayName.value;\n      this.loading.displayName = true;\n      this.$store.dispatch('setUserData', {\n        userid: this.user.id,\n        key: 'displayname',\n        value: displayName\n      }).then(function () {\n        _this7.loading.displayName = false;\n        _this7.$refs.displayName.value = displayName;\n      });\n    },\n\n    /**\n     * Set user password\n     * \n     * @param {string} password The email adress\n     * @returns {Promise}\n     */\n    updatePassword: function updatePassword() {\n      var _this8 = this;\n\n      var password = this.$refs.password.value;\n      this.loading.password = true;\n      this.$store.dispatch('setUserData', {\n        userid: this.user.id,\n        key: 'password',\n        value: password\n      }).then(function () {\n        _this8.loading.password = false;\n        _this8.$refs.password.value = ''; // empty & show placeholder \n      });\n    },\n\n    /**\n     * Set user mailAddress\n     * \n     * @param {string} mailAddress The email adress\n     * @returns {Promise}\n     */\n    updateEmail: function updateEmail() {\n      var _this9 = this;\n\n      var mailAddress = this.$refs.mailAddress.value;\n      this.loading.mailAddress = true;\n      this.$store.dispatch('setUserData', {\n        userid: this.user.id,\n        key: 'email',\n        value: mailAddress\n      }).then(function () {\n        _this9.loading.mailAddress = false;\n        _this9.$refs.mailAddress.value = mailAddress;\n      });\n    },\n\n    /**\n     * Create a new group and add user to it\n     * \n     * @param {string} groups Group id\n     * @returns {Promise}\n     */\n    createGroup: function createGroup(gid) {\n      var _this10 = this;\n\n      this.loading = {\n        groups: true,\n        subadmins: true\n      };\n      this.$store.dispatch('addGroup', gid).then(function () {\n        _this10.loading = {\n          groups: false,\n          subadmins: false\n        };\n        var userid = _this10.user.id;\n\n        _this10.$store.dispatch('addUserGroup', {\n          userid: userid,\n          gid: gid\n        });\n      }).catch(function () {\n        _this10.loading = {\n          groups: false,\n          subadmins: false\n        };\n      });\n      return this.$store.getters.getGroups[this.groups.length];\n    },\n\n    /**\n     * Add user to group\n     * \n     * @param {object} group Group object\n     * @returns {Promise}\n     */\n    addUserGroup: function addUserGroup(group) {\n      var _this11 = this;\n\n      if (group.canAdd === false) {\n        return false;\n      }\n\n      this.loading.groups = true;\n      var userid = this.user.id;\n      var gid = group.id;\n      return this.$store.dispatch('addUserGroup', {\n        userid: userid,\n        gid: gid\n      }).then(function () {\n        return _this11.loading.groups = false;\n      });\n    },\n\n    /**\n     * Remove user from group\n     * \n     * @param {object} group Group object\n     * @returns {Promise}\n     */\n    removeUserGroup: function removeUserGroup(group) {\n      var _this12 = this;\n\n      if (group.canRemove === false) {\n        return false;\n      }\n\n      this.loading.groups = true;\n      var userid = this.user.id;\n      var gid = group.id;\n      return this.$store.dispatch('removeUserGroup', {\n        userid: userid,\n        gid: gid\n      }).then(function () {\n        _this12.loading.groups = false; // remove user from current list if current list is the removed group\n\n        if (_this12.$route.params.selectedGroup === gid) {\n          _this12.$store.commit('deleteUser', userid);\n        }\n      }).catch(function () {\n        _this12.loading.groups = false;\n      });\n    },\n\n    /**\n     * Add user to group\n     * \n     * @param {object} group Group object\n     * @returns {Promise}\n     */\n    addUserSubAdmin: function addUserSubAdmin(group) {\n      var _this13 = this;\n\n      this.loading.subadmins = true;\n      var userid = this.user.id;\n      var gid = group.id;\n      return this.$store.dispatch('addUserSubAdmin', {\n        userid: userid,\n        gid: gid\n      }).then(function () {\n        return _this13.loading.subadmins = false;\n      });\n    },\n\n    /**\n     * Remove user from group\n     * \n     * @param {object} group Group object\n     * @returns {Promise}\n     */\n    removeUserSubAdmin: function removeUserSubAdmin(group) {\n      var _this14 = this;\n\n      this.loading.subadmins = true;\n      var userid = this.user.id;\n      var gid = group.id;\n      return this.$store.dispatch('removeUserSubAdmin', {\n        userid: userid,\n        gid: gid\n      }).then(function () {\n        return _this14.loading.subadmins = false;\n      });\n    },\n\n    /**\n     * Dispatch quota set request\n     * \n     * @param {string|Object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n     * @returns {string}\n     */\n    setUserQuota: function setUserQuota() {\n      var _this15 = this;\n\n      var quota = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'none';\n      this.loading.quota = true; // ensure we only send the preset id\n\n      quota = quota.id ? quota.id : quota;\n      this.$store.dispatch('setUserData', {\n        userid: this.user.id,\n        key: 'quota',\n        value: quota\n      }).then(function () {\n        return _this15.loading.quota = false;\n      });\n      return quota;\n    },\n\n    /**\n     * Validate quota string to make sure it's a valid human file size\n     * \n     * @param {string} quota Quota in readable format '5 GB'\n     * @returns {Promise|boolean}\n     */\n    validateQuota: function validateQuota(quota) {\n      // only used for new presets sent through @Tag\n      var validQuota = OC.Util.computerFileSize(quota);\n\n      if (validQuota !== null && validQuota >= 0) {\n        // unify format output\n        return this.setUserQuota(OC.Util.humanFileSize(OC.Util.computerFileSize(quota)));\n      } // if no valid do not change\n\n\n      return false;\n    },\n\n    /**\n     * Dispatch language set request\n     * \n     * @param {Object} lang language object {code:'en', name:'English'}\n     * @returns {Object}\n     */\n    setUserLanguage: function setUserLanguage(lang) {\n      var _this16 = this;\n\n      this.loading.languages = true; // ensure we only send the preset id\n\n      this.$store.dispatch('setUserData', {\n        userid: this.user.id,\n        key: 'language',\n        value: lang.code\n      }).then(function () {\n        return _this16.loading.languages = false;\n      });\n      return lang;\n    },\n\n    /**\n     * Dispatch new welcome mail request\n     */\n    sendWelcomeMail: function sendWelcomeMail() {\n      var _this17 = this;\n\n      this.loading.all = true;\n      this.$store.dispatch('sendWelcomeMail', this.user.id).then(function (success) {\n        if (success) {\n          // Show feedback to indicate the success\n          _this17.feedbackMessage = t('setting', 'Welcome mail sent!');\n          setTimeout(function () {\n            _this17.feedbackMessage = '';\n          }, 2000);\n        }\n\n        _this17.loading.all = false;\n      });\n    }\n  }\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AppContent, AppNavigationItem, AppNavigationNew, AppNavigationSettings } from 'nextcloud-vue';\nimport userList from '../components/userList';\nimport Vue from 'vue';\nimport VueLocalStorage from 'vue-localstorage';\nimport Multiselect from 'vue-multiselect';\nimport api from '../store/api';\nVue.use(VueLocalStorage);\nexport default {\n  name: 'Users',\n  props: ['selectedGroup'],\n  components: {\n    AppContent: AppContent,\n    AppNavigationItem: AppNavigationItem,\n    AppNavigationNew: AppNavigationNew,\n    AppNavigationSettings: AppNavigationSettings,\n    userList: userList,\n    Multiselect: Multiselect\n  },\n  beforeMount: function beforeMount() {\n    this.$store.commit('initGroups', {\n      groups: this.$store.getters.getServerData.groups,\n      orderBy: this.$store.getters.getServerData.sortGroups,\n      userCount: this.$store.getters.getServerData.userCount\n    });\n    this.$store.dispatch('getPasswordPolicyMinLength');\n  },\n  created: function created() {\n    // init the OCA.Settings.UserList object\n    // and add the registerAction method\n    Object.assign(OCA, {\n      Settings: {\n        UserList: {\n          registerAction: this.registerAction\n        }\n      }\n    });\n  },\n  data: function data() {\n    return {\n      // default quota is set to unlimited\n      unlimitedQuota: {\n        id: 'none',\n        label: t('settings', 'Unlimited')\n      },\n      // temporary value used for multiselect change\n      selectedQuota: false,\n      externalActions: [],\n      showAddGroupEntry: false,\n      loadingAddGroup: false,\n      showConfig: {\n        showStoragePath: false,\n        showUserBackend: false,\n        showLastLogin: false,\n        showNewUserForm: false,\n        showLanguages: false\n      }\n    };\n  },\n  methods: {\n    toggleNewUserMenu: function toggleNewUserMenu() {\n      this.showConfig.showNewUserForm = !this.showConfig.showNewUserForm;\n\n      if (this.showConfig.showNewUserForm) {\n        Vue.nextTick(function () {\n          window.newusername.focus();\n        });\n      }\n    },\n    getLocalstorage: function getLocalstorage(key) {\n      // force initialization\n      var localConfig = this.$localStorage.get(key); // if localstorage is null, fallback to original values\n\n      this.showConfig[key] = localConfig !== null ? localConfig === 'true' : this.showConfig[key];\n      return this.showConfig[key];\n    },\n    setLocalStorage: function setLocalStorage(key, status) {\n      this.showConfig[key] = status;\n      this.$localStorage.set(key, status);\n      return status;\n    },\n    removeGroup: function removeGroup(groupid) {\n      var self = this; // TODO migrate to a vue js confirm dialog component \n\n      OC.dialogs.confirm(t('settings', 'You are about to remove the group {group}. The users will NOT be deleted.', {\n        group: groupid\n      }), t('settings', 'Please confirm the group removal '), function (success) {\n        if (success) {\n          self.$store.dispatch('removeGroup', groupid);\n        }\n      });\n    },\n\n    /**\n     * Dispatch default quota set request\n     * \n     * @param {string|Object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n     * @returns {string}\n     */\n    setDefaultQuota: function setDefaultQuota() {\n      var _this = this;\n\n      var quota = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'none';\n      this.$store.dispatch('setAppConfig', {\n        app: 'files',\n        key: 'default_quota',\n        // ensure we only send the preset id\n        value: quota.id ? quota.id : quota\n      }).then(function () {\n        if (_typeof(quota) !== 'object') {\n          quota = {\n            id: quota,\n            label: quota\n          };\n        }\n\n        _this.defaultQuota = quota;\n      });\n    },\n\n    /**\n     * Validate quota string to make sure it's a valid human file size\n     * \n     * @param {string} quota Quota in readable format '5 GB'\n     * @returns {Promise|boolean}\n     */\n    validateQuota: function validateQuota(quota) {\n      // only used for new presets sent through @Tag\n      var validQuota = OC.Util.computerFileSize(quota);\n\n      if (validQuota === 0) {\n        return this.setDefaultQuota('none');\n      } else if (validQuota !== null) {\n        // unify format output\n        return this.setDefaultQuota(OC.Util.humanFileSize(OC.Util.computerFileSize(quota)));\n      } // if no valid do not change\n\n\n      return false;\n    },\n\n    /**\n     * Register a new action for the user menu\n     * \n     * @param {string} icon the icon class\n     * @param {string} text the text to display\n     * @param {function} action the function to run\n     */\n    registerAction: function registerAction(icon, text, action) {\n      this.externalActions.push({\n        icon: icon,\n        text: text,\n        action: action\n      });\n      return this.externalActions;\n    },\n\n    /**\n     * Create a new group\n     * \n     * @param {Object} event The form submit event\n     */\n    createGroup: function createGroup(event) {\n      var _this2 = this;\n\n      var gid = event.target[0].value;\n      this.loadingAddGroup = true;\n      this.$store.dispatch('addGroup', gid).then(function () {\n        _this2.showAddGroupEntry = false;\n        _this2.loadingAddGroup = false;\n\n        _this2.$router.push({\n          name: 'group',\n          params: {\n            selectedGroup: gid\n          }\n        });\n      }).catch(function () {\n        _this2.loadingAddGroup = false;\n      });\n    }\n  },\n  computed: {\n    users: function users() {\n      return this.$store.getters.getUsers;\n    },\n    usersOffset: function usersOffset() {\n      return this.$store.getters.getUsersOffset;\n    },\n    usersLimit: function usersLimit() {\n      return this.$store.getters.getUsersLimit;\n    },\n    // Local settings\n    showLanguages: {\n      get: function get() {\n        return this.getLocalstorage('showLanguages');\n      },\n      set: function set(status) {\n        this.setLocalStorage('showLanguages', status);\n      }\n    },\n    showLastLogin: {\n      get: function get() {\n        return this.getLocalstorage('showLastLogin');\n      },\n      set: function set(status) {\n        this.setLocalStorage('showLastLogin', status);\n      }\n    },\n    showUserBackend: {\n      get: function get() {\n        return this.getLocalstorage('showUserBackend');\n      },\n      set: function set(status) {\n        this.setLocalStorage('showUserBackend', status);\n      }\n    },\n    showStoragePath: {\n      get: function get() {\n        return this.getLocalstorage('showStoragePath');\n      },\n      set: function set(status) {\n        this.setLocalStorage('showStoragePath', status);\n      }\n    },\n    userCount: function userCount() {\n      return this.$store.getters.getUserCount;\n    },\n    settings: function settings() {\n      return this.$store.getters.getServerData;\n    },\n    // default quota\n    quotaOptions: function quotaOptions() {\n      // convert the preset array into objects\n      var quotaPreset = this.settings.quotaPreset.reduce(function (acc, cur) {\n        return acc.concat({\n          id: cur,\n          label: cur\n        });\n      }, []); // add default presets\n\n      quotaPreset.unshift(this.unlimitedQuota);\n      return quotaPreset;\n    },\n    // mapping saved values to objects\n    defaultQuota: {\n      get: function get() {\n        if (this.selectedQuota !== false) {\n          return this.selectedQuota;\n        }\n\n        if (OC.Util.computerFileSize(this.settings.defaultQuota) > 0) {\n          // if value is valid, let's map the quotaOptions or return custom quota\n          return {\n            id: this.settings.defaultQuota,\n            label: this.settings.defaultQuota\n          };\n        }\n\n        return this.unlimitedQuota; // unlimited\n      },\n      set: function set(quota) {\n        this.selectedQuota = quota;\n      }\n    },\n    // BUILD APP NAVIGATION MENU OBJECT\n    menu: function menu() {\n      var _this3 = this;\n\n      // Data provided php side\n      var self = this;\n      var groups = this.$store.getters.getGroups;\n      groups = Array.isArray(groups) ? groups : []; // Map groups\n\n      groups = groups.map(function (group) {\n        var item = {};\n        item.id = group.id.replace(' ', '_');\n        item.key = item.id;\n        item.utils = {}; // router link to\n\n        item.router = {\n          name: 'group',\n          params: {\n            selectedGroup: group.id\n          }\n        }; // group name\n\n        item.text = group.name;\n        item.title = group.name; // users count for all groups\n\n        if (group.usercount - group.disabled > 0 || group.usercount === -1) {\n          item.utils.counter = group.usercount - group.disabled;\n        }\n\n        if (item.id !== 'admin' && item.id !== 'disabled' && _this3.settings.isAdmin) {\n          // add delete button on real groups\n          item.utils.actions = [{\n            icon: 'icon-delete',\n            text: t('settings', 'Remove group'),\n            action: function action() {\n              self.removeGroup(group.id);\n            }\n          }];\n        }\n\n        ;\n        return item;\n      }); // Every item is added on top of the array, so we're going backward\n      // Groups, separator, disabled, admin, everyone\n      // Add separator\n\n      var realGroups = groups.find(function (group) {\n        return group.id !== 'disabled' && group.id !== 'admin';\n      });\n      realGroups = typeof realGroups === 'undefined' ? [] : realGroups;\n      realGroups = Array.isArray(realGroups) ? realGroups : [realGroups];\n\n      if (realGroups.length > 0) {\n        var separator = {\n          caption: true,\n          text: t('settings', 'Groups')\n        };\n        groups.unshift(separator);\n      } // Adjust admin and disabled groups\n\n\n      var adminGroup = groups.find(function (group) {\n        return group.id == 'admin';\n      });\n      var disabledGroup = groups.find(function (group) {\n        return group.id == 'disabled';\n      }); // filter out admin and disabled\n\n      groups = groups.filter(function (group) {\n        return ['admin', 'disabled'].indexOf(group.id) === -1;\n      });\n\n      if (adminGroup && adminGroup.text) {\n        adminGroup.text = t('settings', 'Admins'); // rename admin group\n\n        adminGroup.icon = 'icon-user-admin'; // set icon\n\n        groups.unshift(adminGroup); // add admin group if present\n      }\n\n      if (disabledGroup && disabledGroup.text) {\n        disabledGroup.text = t('settings', 'Disabled users'); // rename disabled group\n\n        disabledGroup.icon = 'icon-disabled-users'; // set icon\n\n        if (disabledGroup.utils && (disabledGroup.utils.counter > 0 // add disabled if not empty \n        || disabledGroup.utils.counter === -1) // add disabled if ldap enabled \n        ) {\n            groups.unshift(disabledGroup);\n          }\n      } // Add everyone group\n\n\n      var everyoneGroup = {\n        id: 'everyone',\n        key: 'everyone',\n        icon: 'icon-contacts-dark',\n        router: {\n          name: 'users'\n        },\n        text: t('settings', 'Everyone')\n      }; // users count\n\n      if (this.userCount > 0) {\n        Vue.set(everyoneGroup, 'utils', {\n          counter: this.userCount\n        });\n      }\n\n      groups.unshift(everyoneGroup);\n      var addGroup = {\n        id: 'addgroup',\n        key: 'addgroup',\n        icon: 'icon-add',\n        text: t('settings', 'Add group'),\n        classes: this.loadingAddGroup ? 'icon-loading-small' : ''\n      };\n\n      if (this.showAddGroupEntry) {\n        Vue.set(addGroup, 'edit', {\n          text: t('settings', 'Add group'),\n          action: this.createGroup,\n          reset: function reset() {\n            self.showAddGroupEntry = false;\n          }\n        });\n        addGroup.classes = 'editing';\n      } else {\n        Vue.set(addGroup, 'action', function () {\n          self.showAddGroupEntry = true; // focus input\n\n          Vue.nextTick(function () {\n            window.addgroup.querySelector('form > input[type=\"text\"]').focus();\n          });\n        });\n      }\n\n      groups.unshift(addGroup);\n      return groups;\n    }\n  }\n};","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"user-list-grid\",\n      attrs: { id: \"app-content\" },\n      on: {\n        \"&scroll\": function($event) {\n          return _vm.onScroll($event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"row\",\n          class: { sticky: _vm.scrolled && !_vm.showConfig.showNewUserForm },\n          attrs: { id: \"grid-header\" }\n        },\n        [\n          _c(\"div\", { staticClass: \"avatar\", attrs: { id: \"headerAvatar\" } }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\", attrs: { id: \"headerName\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Username\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"displayName\", attrs: { id: \"headerDisplayName\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Display name\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"password\", attrs: { id: \"headerPassword\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Password\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"mailAddress\", attrs: { id: \"headerAddress\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Email\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"groups\", attrs: { id: \"headerGroups\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Groups\")))\n          ]),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                { staticClass: \"subadmins\", attrs: { id: \"headerSubAdmins\" } },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Group admin for\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"quota\", attrs: { id: \"headerQuota\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Quota\")))\n          ]),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                { staticClass: \"languages\", attrs: { id: \"headerLanguages\" } },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Language\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\n                \"div\",\n                { staticClass: \"headerStorageLocation storageLocation\" },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Storage location\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"headerUserBackend userBackend\" }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"User backend\")))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\"div\", { staticClass: \"headerLastLogin lastLogin\" }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Last login\")))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"form\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.showConfig.showNewUserForm,\n              expression: \"showConfig.showNewUserForm\"\n            }\n          ],\n          staticClass: \"row\",\n          class: { sticky: _vm.scrolled && _vm.showConfig.showNewUserForm },\n          attrs: { id: \"new-user\", disabled: _vm.loading.all },\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.createUser($event)\n            }\n          }\n        },\n        [\n          _c(\"div\", {\n            class: _vm.loading.all ? \"icon-loading-small\" : \"icon-add\"\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.id,\n                  expression: \"newUser.id\"\n                }\n              ],\n              ref: \"newusername\",\n              attrs: {\n                id: \"newusername\",\n                type: \"text\",\n                required: \"\",\n                placeholder: _vm.t(\"settings\", \"Username\"),\n                name: \"username\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\",\n                pattern: \"[a-zA-Z0-9 _\\\\.@\\\\-']+\"\n              },\n              domProps: { value: _vm.newUser.id },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"id\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"displayName\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.displayName,\n                  expression: \"newUser.displayName\"\n                }\n              ],\n              attrs: {\n                id: \"newdisplayname\",\n                type: \"text\",\n                placeholder: _vm.t(\"settings\", \"Display name\"),\n                name: \"displayname\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\"\n              },\n              domProps: { value: _vm.newUser.displayName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"displayName\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"password\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.password,\n                  expression: \"newUser.password\"\n                }\n              ],\n              ref: \"newuserpassword\",\n              attrs: {\n                id: \"newuserpassword\",\n                type: \"password\",\n                required: _vm.newUser.mailAddress === \"\",\n                placeholder: _vm.t(\"settings\", \"Password\"),\n                name: \"password\",\n                autocomplete: \"new-password\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\",\n                minlength: _vm.minPasswordLength\n              },\n              domProps: { value: _vm.newUser.password },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"password\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"mailAddress\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.mailAddress,\n                  expression: \"newUser.mailAddress\"\n                }\n              ],\n              attrs: {\n                id: \"newemail\",\n                type: \"email\",\n                required: _vm.newUser.password === \"\",\n                placeholder: _vm.t(\"settings\", \"Email\"),\n                name: \"email\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\"\n              },\n              domProps: { value: _vm.newUser.mailAddress },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"mailAddress\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"groups\" },\n            [\n              !_vm.settings.isAdmin\n                ? _c(\"input\", {\n                    class: { \"icon-loading-small\": _vm.loading.groups },\n                    attrs: {\n                      type: \"text\",\n                      tabindex: \"-1\",\n                      id: \"newgroups\",\n                      required: !_vm.settings.isAdmin\n                    },\n                    domProps: { value: _vm.newUser.groups }\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"multiselect\",\n                {\n                  staticClass: \"multiselect-vue\",\n                  attrs: {\n                    options: _vm.canAddGroups,\n                    disabled: _vm.loading.groups || _vm.loading.all,\n                    \"tag-placeholder\": \"create\",\n                    placeholder: _vm.t(\"settings\", \"Add user in group\"),\n                    label: \"name\",\n                    \"track-by\": \"id\",\n                    multiple: true,\n                    taggable: true,\n                    \"close-on-select\": false,\n                    \"tag-width\": 60\n                  },\n                  on: { tag: _vm.createGroup },\n                  model: {\n                    value: _vm.newUser.groups,\n                    callback: function($$v) {\n                      _vm.$set(_vm.newUser, \"groups\", $$v)\n                    },\n                    expression: \"newUser.groups\"\n                  }\n                },\n                [\n                  _c(\n                    \"span\",\n                    { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                    [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                { staticClass: \"subadmins\" },\n                [\n                  _c(\n                    \"multiselect\",\n                    {\n                      staticClass: \"multiselect-vue\",\n                      attrs: {\n                        options: _vm.subAdminsGroups,\n                        placeholder: _vm.t(\"settings\", \"Set user as admin for\"),\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        multiple: true,\n                        \"close-on-select\": false,\n                        \"tag-width\": 60\n                      },\n                      model: {\n                        value: _vm.newUser.subAdminsGroups,\n                        callback: function($$v) {\n                          _vm.$set(_vm.newUser, \"subAdminsGroups\", $$v)\n                        },\n                        expression: \"newUser.subAdminsGroups\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                        [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"quota\" },\n            [\n              _c(\"multiselect\", {\n                staticClass: \"multiselect-vue\",\n                attrs: {\n                  options: _vm.quotaOptions,\n                  placeholder: _vm.t(\"settings\", \"Select user quota\"),\n                  label: \"label\",\n                  \"track-by\": \"id\",\n                  allowEmpty: false,\n                  taggable: true\n                },\n                on: { tag: _vm.validateQuota },\n                model: {\n                  value: _vm.newUser.quota,\n                  callback: function($$v) {\n                    _vm.$set(_vm.newUser, \"quota\", $$v)\n                  },\n                  expression: \"newUser.quota\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                { staticClass: \"languages\" },\n                [\n                  _c(\"multiselect\", {\n                    staticClass: \"multiselect-vue\",\n                    attrs: {\n                      options: _vm.languages,\n                      placeholder: _vm.t(\"settings\", \"Default language\"),\n                      label: \"name\",\n                      \"track-by\": \"code\",\n                      allowEmpty: false,\n                      \"group-values\": \"languages\",\n                      \"group-label\": \"label\"\n                    },\n                    model: {\n                      value: _vm.newUser.language,\n                      callback: function($$v) {\n                        _vm.$set(_vm.newUser, \"language\", $$v)\n                      },\n                      expression: \"newUser.language\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\"div\", { staticClass: \"storageLocation\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"userBackend\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\"div\", { staticClass: \"lastLogin\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" }, [\n            _c(\"input\", {\n              staticClass: \"button primary icon-checkmark-white has-tooltip\",\n              attrs: {\n                type: \"submit\",\n                id: \"newsubmit\",\n                value: \"\",\n                title: _vm.t(\"settings\", \"Add a new user\")\n              }\n            })\n          ])\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm._l(_vm.filteredUsers, function(user, key) {\n        return _c(\"user-row\", {\n          key: key,\n          attrs: {\n            user: user,\n            settings: _vm.settings,\n            showConfig: _vm.showConfig,\n            groups: _vm.groups,\n            subAdminsGroups: _vm.subAdminsGroups,\n            quotaOptions: _vm.quotaOptions,\n            languages: _vm.languages,\n            externalActions: _vm.externalActions\n          }\n        })\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"infinite-loading\",\n        { ref: \"infiniteLoading\", on: { infinite: _vm.infiniteHandler } },\n        [\n          _c(\"div\", { attrs: { slot: \"spinner\" }, slot: \"spinner\" }, [\n            _c(\"div\", { staticClass: \"users-icon-loading icon-loading\" })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { attrs: { slot: \"no-more\" }, slot: \"no-more\" }, [\n            _c(\"div\", { staticClass: \"users-list-end\" })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { attrs: { slot: \"no-results\" }, slot: \"no-results\" }, [\n            _c(\"div\", { attrs: { id: \"emptycontent\" } }, [\n              _c(\"div\", { staticClass: \"icon-contacts-dark\" }),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(_vm._s(_vm.t(\"settings\", \"No users in here\")))])\n            ])\n          ])\n        ]\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return Object.keys(_vm.user).length === 1\n    ? _c(\"div\", { staticClass: \"row\", attrs: { \"data-id\": _vm.user.id } }, [\n        _c(\n          \"div\",\n          {\n            staticClass: \"avatar\",\n            class: {\n              \"icon-loading-small\": _vm.loading.delete || _vm.loading.disable\n            }\n          },\n          [\n            !_vm.loading.delete && !_vm.loading.disable\n              ? _c(\"img\", {\n                  attrs: {\n                    alt: \"\",\n                    width: \"32\",\n                    height: \"32\",\n                    src: _vm.generateAvatar(_vm.user.id, 32),\n                    srcset:\n                      _vm.generateAvatar(_vm.user.id, 64) +\n                      \" 2x, \" +\n                      _vm.generateAvatar(_vm.user.id, 128) +\n                      \" 4x\"\n                  }\n                })\n              : _vm._e()\n          ]\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"name\" }, [_vm._v(_vm._s(_vm.user.id))]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"obfuscated\" }, [\n          _vm._v(\n            _vm._s(\n              _vm.t(\n                \"settings\",\n                \"You do not have permissions to see the details of this user\"\n              )\n            )\n          )\n        ])\n      ])\n    : _c(\n        \"div\",\n        {\n          staticClass: \"row\",\n          class: { disabled: _vm.loading.delete || _vm.loading.disable },\n          attrs: { \"data-id\": _vm.user.id }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass: \"avatar\",\n              class: {\n                \"icon-loading-small\": _vm.loading.delete || _vm.loading.disable\n              }\n            },\n            [\n              !_vm.loading.delete && !_vm.loading.disable\n                ? _c(\"img\", {\n                    attrs: {\n                      alt: \"\",\n                      width: \"32\",\n                      height: \"32\",\n                      src: _vm.generateAvatar(_vm.user.id, 32),\n                      srcset:\n                        _vm.generateAvatar(_vm.user.id, 64) +\n                        \" 2x, \" +\n                        _vm.generateAvatar(_vm.user.id, 128) +\n                        \" 4x\"\n                    }\n                  })\n                : _vm._e()\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\" }, [_vm._v(_vm._s(_vm.user.id))]),\n          _vm._v(\" \"),\n          _c(\n            \"form\",\n            {\n              staticClass: \"displayName\",\n              class: { \"icon-loading-small\": _vm.loading.displayName },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.updateDisplayName($event)\n                }\n              }\n            },\n            [\n              _vm.user.backendCapabilities.setDisplayName\n                ? [\n                    _vm.user.backendCapabilities.setDisplayName\n                      ? _c(\"input\", {\n                          ref: \"displayName\",\n                          attrs: {\n                            id: \"displayName\" + _vm.user.id + _vm.rand,\n                            type: \"text\",\n                            disabled:\n                              _vm.loading.displayName || _vm.loading.all,\n                            autocomplete: \"new-password\",\n                            autocorrect: \"off\",\n                            autocapitalize: \"off\",\n                            spellcheck: \"false\"\n                          },\n                          domProps: { value: _vm.user.displayname }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.user.backendCapabilities.setDisplayName\n                      ? _c(\"input\", {\n                          staticClass: \"icon-confirm\",\n                          attrs: { type: \"submit\", value: \"\" }\n                        })\n                      : _vm._e()\n                  ]\n                : _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip.auto\",\n                          value: _vm.t(\n                            \"settings\",\n                            \"The backend does not support changing the display name\"\n                          ),\n                          expression:\n                            \"t('settings', 'The backend does not support changing the display name')\",\n                          modifiers: { auto: true }\n                        }\n                      ],\n                      staticClass: \"name\"\n                    },\n                    [_vm._v(_vm._s(_vm.user.displayname))]\n                  )\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _vm.settings.canChangePassword &&\n          _vm.user.backendCapabilities.setPassword\n            ? _c(\n                \"form\",\n                {\n                  staticClass: \"password\",\n                  class: { \"icon-loading-small\": _vm.loading.password },\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.updatePassword($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"input\", {\n                    ref: \"password\",\n                    attrs: {\n                      id: \"password\" + _vm.user.id + _vm.rand,\n                      type: \"password\",\n                      required: \"\",\n                      disabled: _vm.loading.password || _vm.loading.all,\n                      minlength: _vm.minPasswordLength,\n                      value: \"\",\n                      placeholder: _vm.t(\"settings\", \"New password\"),\n                      autocomplete: \"new-password\",\n                      autocorrect: \"off\",\n                      autocapitalize: \"off\",\n                      spellcheck: \"false\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    staticClass: \"icon-confirm\",\n                    attrs: { type: \"submit\", value: \"\" }\n                  })\n                ]\n              )\n            : _c(\"div\"),\n          _vm._v(\" \"),\n          _c(\n            \"form\",\n            {\n              staticClass: \"mailAddress\",\n              class: { \"icon-loading-small\": _vm.loading.mailAddress },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.updateEmail($event)\n                }\n              }\n            },\n            [\n              _c(\"input\", {\n                ref: \"mailAddress\",\n                attrs: {\n                  id: \"mailAddress\" + _vm.user.id + _vm.rand,\n                  type: \"email\",\n                  disabled: _vm.loading.mailAddress || _vm.loading.all,\n                  autocomplete: \"new-password\",\n                  autocorrect: \"off\",\n                  autocapitalize: \"off\",\n                  spellcheck: \"false\"\n                },\n                domProps: { value: _vm.user.email }\n              }),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                staticClass: \"icon-confirm\",\n                attrs: { type: \"submit\", value: \"\" }\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"groups\",\n              class: { \"icon-loading-small\": _vm.loading.groups }\n            },\n            [\n              _c(\n                \"multiselect\",\n                {\n                  staticClass: \"multiselect-vue\",\n                  attrs: {\n                    value: _vm.userGroups,\n                    options: _vm.availableGroups,\n                    disabled: _vm.loading.groups || _vm.loading.all,\n                    \"tag-placeholder\": \"create\",\n                    placeholder: _vm.t(\"settings\", \"Add user in group\"),\n                    label: \"name\",\n                    \"track-by\": \"id\",\n                    limit: 2,\n                    multiple: true,\n                    taggable: _vm.settings.isAdmin,\n                    closeOnSelect: false,\n                    \"tag-width\": 60\n                  },\n                  on: {\n                    tag: _vm.createGroup,\n                    select: _vm.addUserGroup,\n                    remove: _vm.removeUserGroup\n                  }\n                },\n                [\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip.auto\",\n                          value: _vm.formatGroupsTitle(_vm.userGroups),\n                          expression: \"formatGroupsTitle(userGroups)\",\n                          modifiers: { auto: true }\n                        }\n                      ],\n                      staticClass: \"multiselect__limit\",\n                      attrs: { slot: \"limit\" },\n                      slot: \"limit\"\n                    },\n                    [_vm._v(\"+\" + _vm._s(_vm.userGroups.length - 2))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                    [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                {\n                  staticClass: \"subadmins\",\n                  class: { \"icon-loading-small\": _vm.loading.subadmins }\n                },\n                [\n                  _c(\n                    \"multiselect\",\n                    {\n                      staticClass: \"multiselect-vue\",\n                      attrs: {\n                        value: _vm.userSubAdminsGroups,\n                        options: _vm.subAdminsGroups,\n                        disabled: _vm.loading.subadmins || _vm.loading.all,\n                        placeholder: _vm.t(\"settings\", \"Set user as admin for\"),\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        limit: 2,\n                        multiple: true,\n                        closeOnSelect: false,\n                        \"tag-width\": 60\n                      },\n                      on: {\n                        select: _vm.addUserSubAdmin,\n                        remove: _vm.removeUserSubAdmin\n                      }\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"tooltip\",\n                              rawName: \"v-tooltip.auto\",\n                              value: _vm.formatGroupsTitle(\n                                _vm.userSubAdminsGroups\n                              ),\n                              expression:\n                                \"formatGroupsTitle(userSubAdminsGroups)\",\n                              modifiers: { auto: true }\n                            }\n                          ],\n                          staticClass: \"multiselect__limit\",\n                          attrs: { slot: \"limit\" },\n                          slot: \"limit\"\n                        },\n                        [\n                          _vm._v(\n                            \"+\" + _vm._s(_vm.userSubAdminsGroups.length - 2)\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                        [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"tooltip\",\n                  rawName: \"v-tooltip.auto\",\n                  value: _vm.usedSpace,\n                  expression: \"usedSpace\",\n                  modifiers: { auto: true }\n                }\n              ],\n              staticClass: \"quota\",\n              class: { \"icon-loading-small\": _vm.loading.quota }\n            },\n            [\n              _c(\"multiselect\", {\n                staticClass: \"multiselect-vue\",\n                attrs: {\n                  value: _vm.userQuota,\n                  options: _vm.quotaOptions,\n                  disabled: _vm.loading.quota || _vm.loading.all,\n                  \"tag-placeholder\": \"create\",\n                  placeholder: _vm.t(\"settings\", \"Select user quota\"),\n                  label: \"label\",\n                  \"track-by\": \"id\",\n                  allowEmpty: false,\n                  taggable: true\n                },\n                on: { tag: _vm.validateQuota, input: _vm.setUserQuota }\n              }),\n              _vm._v(\" \"),\n              _c(\"progress\", {\n                staticClass: \"quota-user-progress\",\n                class: { warn: _vm.usedQuota > 80 },\n                attrs: { max: \"100\" },\n                domProps: { value: _vm.usedQuota }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                {\n                  staticClass: \"languages\",\n                  class: { \"icon-loading-small\": _vm.loading.languages }\n                },\n                [\n                  _c(\"multiselect\", {\n                    staticClass: \"multiselect-vue\",\n                    attrs: {\n                      value: _vm.userLanguage,\n                      options: _vm.languages,\n                      disabled: _vm.loading.languages || _vm.loading.all,\n                      placeholder: _vm.t(\"settings\", \"No language set\"),\n                      label: \"name\",\n                      \"track-by\": \"code\",\n                      allowEmpty: false,\n                      \"group-values\": \"languages\",\n                      \"group-label\": \"label\"\n                    },\n                    on: { input: _vm.setUserLanguage }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\"div\", { staticClass: \"storageLocation\" }, [\n                _vm._v(_vm._s(_vm.user.storageLocation))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"userBackend\" }, [\n                _vm._v(_vm._s(_vm.user.backend))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"tooltip\",\n                      rawName: \"v-tooltip.auto\",\n                      value:\n                        _vm.user.lastLogin > 0\n                          ? _vm.OC.Util.formatDate(_vm.user.lastLogin)\n                          : \"\",\n                      expression:\n                        \"user.lastLogin>0 ? OC.Util.formatDate(user.lastLogin) : ''\",\n                      modifiers: { auto: true }\n                    }\n                  ],\n                  staticClass: \"lastLogin\"\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\" +\n                      _vm._s(\n                        _vm.user.lastLogin > 0\n                          ? _vm.OC.Util.relativeModifiedDate(_vm.user.lastLogin)\n                          : _vm.t(\"settings\", \"Never\")\n                      ) +\n                      \"\\n\\t\"\n                  )\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" }, [\n            _vm.OC.currentUser !== _vm.user.id &&\n            _vm.user.id !== \"admin\" &&\n            !_vm.loading.all\n              ? _c(\"div\", { staticClass: \"toggleUserActions\" }, [\n                  _c(\"div\", {\n                    directives: [\n                      {\n                        name: \"click-outside\",\n                        rawName: \"v-click-outside\",\n                        value: _vm.hideMenu,\n                        expression: \"hideMenu\"\n                      }\n                    ],\n                    staticClass: \"icon-more\",\n                    on: { click: _vm.toggleMenu }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"popovermenu\",\n                      class: { open: _vm.openedMenu }\n                    },\n                    [_c(\"popover-menu\", { attrs: { menu: _vm.userActions } })],\n                    1\n                  )\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"feedback\",\n                style: { opacity: _vm.feedbackMessage !== \"\" ? 1 : 0 }\n              },\n              [\n                _c(\"div\", { staticClass: \"icon-checkmark\" }),\n                _vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.feedbackMessage) + \"\\n\\t\\t\")\n              ]\n            )\n          ])\n        ]\n      )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"AppContent\", {\n    attrs: {\n      \"app-name\": \"settings\",\n      \"navigation-class\": { \"icon-loading\": _vm.loadingAddGroup }\n    },\n    scopedSlots: _vm._u([\n      {\n        key: \"navigation\",\n        fn: function() {\n          return [\n            _c(\"AppNavigationNew\", {\n              attrs: {\n                \"button-id\": \"new-user-button\",\n                text: _vm.t(\"settings\", \"New user\"),\n                \"button-class\": \"icon-add\"\n              },\n              on: { click: _vm.toggleNewUserMenu }\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              { attrs: { id: \"usergrouplist\" } },\n              _vm._l(_vm.menu, function(item) {\n                return _c(\"AppNavigationItem\", {\n                  key: item.key,\n                  attrs: { item: item }\n                })\n              }),\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"AppNavigationSettings\", [\n              _c(\n                \"div\",\n                [\n                  _c(\"p\", [\n                    _vm._v(_vm._s(_vm.t(\"settings\", \"Default quota:\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"multiselect\", {\n                    staticClass: \"multiselect-vue\",\n                    attrs: {\n                      value: _vm.defaultQuota,\n                      options: _vm.quotaOptions,\n                      \"tag-placeholder\": \"create\",\n                      placeholder: _vm.t(\"settings\", \"Select default quota\"),\n                      label: \"label\",\n                      \"track-by\": \"id\",\n                      allowEmpty: false,\n                      taggable: true\n                    },\n                    on: { tag: _vm.validateQuota, input: _vm.setDefaultQuota }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"div\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.showLanguages,\n                      expression: \"showLanguages\"\n                    }\n                  ],\n                  staticClass: \"checkbox\",\n                  attrs: { type: \"checkbox\", id: \"showLanguages\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.showLanguages)\n                      ? _vm._i(_vm.showLanguages, null) > -1\n                      : _vm.showLanguages\n                  },\n                  on: {\n                    change: function($event) {\n                      var $$a = _vm.showLanguages,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = null,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 && (_vm.showLanguages = $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            (_vm.showLanguages = $$a\n                              .slice(0, $$i)\n                              .concat($$a.slice($$i + 1)))\n                        }\n                      } else {\n                        _vm.showLanguages = $$c\n                      }\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"showLanguages\" } }, [\n                  _vm._v(_vm._s(_vm.t(\"settings\", \"Show Languages\")))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.showLastLogin,\n                      expression: \"showLastLogin\"\n                    }\n                  ],\n                  staticClass: \"checkbox\",\n                  attrs: { type: \"checkbox\", id: \"showLastLogin\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.showLastLogin)\n                      ? _vm._i(_vm.showLastLogin, null) > -1\n                      : _vm.showLastLogin\n                  },\n                  on: {\n                    change: function($event) {\n                      var $$a = _vm.showLastLogin,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = null,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 && (_vm.showLastLogin = $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            (_vm.showLastLogin = $$a\n                              .slice(0, $$i)\n                              .concat($$a.slice($$i + 1)))\n                        }\n                      } else {\n                        _vm.showLastLogin = $$c\n                      }\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"showLastLogin\" } }, [\n                  _vm._v(_vm._s(_vm.t(\"settings\", \"Show last login\")))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.showUserBackend,\n                      expression: \"showUserBackend\"\n                    }\n                  ],\n                  staticClass: \"checkbox\",\n                  attrs: { type: \"checkbox\", id: \"showUserBackend\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.showUserBackend)\n                      ? _vm._i(_vm.showUserBackend, null) > -1\n                      : _vm.showUserBackend\n                  },\n                  on: {\n                    change: function($event) {\n                      var $$a = _vm.showUserBackend,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = null,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 && (_vm.showUserBackend = $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            (_vm.showUserBackend = $$a\n                              .slice(0, $$i)\n                              .concat($$a.slice($$i + 1)))\n                        }\n                      } else {\n                        _vm.showUserBackend = $$c\n                      }\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"showUserBackend\" } }, [\n                  _vm._v(_vm._s(_vm.t(\"settings\", \"Show user backend\")))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.showStoragePath,\n                      expression: \"showStoragePath\"\n                    }\n                  ],\n                  staticClass: \"checkbox\",\n                  attrs: { type: \"checkbox\", id: \"showStoragePath\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.showStoragePath)\n                      ? _vm._i(_vm.showStoragePath, null) > -1\n                      : _vm.showStoragePath\n                  },\n                  on: {\n                    change: function($event) {\n                      var $$a = _vm.showStoragePath,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = null,\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 && (_vm.showStoragePath = $$a.concat([$$v]))\n                        } else {\n                          $$i > -1 &&\n                            (_vm.showStoragePath = $$a\n                              .slice(0, $$i)\n                              .concat($$a.slice($$i + 1)))\n                        }\n                      } else {\n                        _vm.showStoragePath = $$c\n                      }\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"label\", { attrs: { for: \"showStoragePath\" } }, [\n                  _vm._v(_vm._s(_vm.t(\"settings\", \"Show storage path\")))\n                ])\n              ])\n            ])\n          ]\n        },\n        proxy: true\n      },\n      {\n        key: \"content\",\n        fn: function() {\n          return [\n            _c(\"user-list\", {\n              attrs: {\n                users: _vm.users,\n                showConfig: _vm.showConfig,\n                selectedGroup: _vm.selectedGroup,\n                externalActions: _vm.externalActions\n              }\n            })\n          ]\n        },\n        proxy: true\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./userList.vue?vue&type=template&id=1347754e&\"\nimport script from \"./userList.vue?vue&type=script&lang=js&\"\nexport * from \"./userList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/nickv/Nextcloud/16/server/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('1347754e', component.options)\n    } else {\n      api.reload('1347754e', component.options)\n    }\n    module.hot.accept(\"./userList.vue?vue&type=template&id=1347754e&\", function () {\n      api.rerender('1347754e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"settings/src/components/userList.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userList.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userList.vue?vue&type=template&id=1347754e&\"","import { render, staticRenderFns } from \"./userRow.vue?vue&type=template&id=5a5e6f59&\"\nimport script from \"./userRow.vue?vue&type=script&lang=js&\"\nexport * from \"./userRow.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/nickv/Nextcloud/16/server/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('5a5e6f59', component.options)\n    } else {\n      api.reload('5a5e6f59', component.options)\n    }\n    module.hot.accept(\"./userRow.vue?vue&type=template&id=5a5e6f59&\", function () {\n      api.rerender('5a5e6f59', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"settings/src/components/userList/userRow.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userRow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userRow.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userRow.vue?vue&type=template&id=5a5e6f59&\"","import { render, staticRenderFns } from \"./Users.vue?vue&type=template&id=1c24c2fe&\"\nimport script from \"./Users.vue?vue&type=script&lang=js&\"\nexport * from \"./Users.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/nickv/Nextcloud/16/server/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('1c24c2fe', component.options)\n    } else {\n      api.reload('1c24c2fe', component.options)\n    }\n    module.hot.accept(\"./Users.vue?vue&type=template&id=1c24c2fe&\", function () {\n      api.rerender('1c24c2fe', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"settings/src/views/Users.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=template&id=1c24c2fe&\""],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7bznvdvdhguBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}